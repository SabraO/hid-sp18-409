# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Crime(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, crime_id: str=None, case_number: str=None, date: str=None, block: str=None, crime_code: str=None, primary_description: str=None, secondary_description: str=None, location_cat: str=None, arrested: bool=None, domestic: bool=None, beat_code: str=None, district_code: str=None, ward_code: str=None, community_area_code: str=None, fbi_code: str=None, x_coordinate: str=None, y_coordinate: str=None, year: str=None, updated_on: str=None, latitude: str=None, longitude: str=None, gps_location: str=None):  # noqa: E501
        """Crime - a model defined in Swagger

        :param crime_id: The crime_id of this Crime.  # noqa: E501
        :type crime_id: str
        :param case_number: The case_number of this Crime.  # noqa: E501
        :type case_number: str
        :param date: The date of this Crime.  # noqa: E501
        :type date: str
        :param block: The block of this Crime.  # noqa: E501
        :type block: str
        :param crime_code: The crime_code of this Crime.  # noqa: E501
        :type crime_code: str
        :param primary_description: The primary_description of this Crime.  # noqa: E501
        :type primary_description: str
        :param secondary_description: The secondary_description of this Crime.  # noqa: E501
        :type secondary_description: str
        :param location_cat: The location_cat of this Crime.  # noqa: E501
        :type location_cat: str
        :param arrested: The arrested of this Crime.  # noqa: E501
        :type arrested: bool
        :param domestic: The domestic of this Crime.  # noqa: E501
        :type domestic: bool
        :param beat_code: The beat_code of this Crime.  # noqa: E501
        :type beat_code: str
        :param district_code: The district_code of this Crime.  # noqa: E501
        :type district_code: str
        :param ward_code: The ward_code of this Crime.  # noqa: E501
        :type ward_code: str
        :param community_area_code: The community_area_code of this Crime.  # noqa: E501
        :type community_area_code: str
        :param fbi_code: The fbi_code of this Crime.  # noqa: E501
        :type fbi_code: str
        :param x_coordinate: The x_coordinate of this Crime.  # noqa: E501
        :type x_coordinate: str
        :param y_coordinate: The y_coordinate of this Crime.  # noqa: E501
        :type y_coordinate: str
        :param year: The year of this Crime.  # noqa: E501
        :type year: str
        :param updated_on: The updated_on of this Crime.  # noqa: E501
        :type updated_on: str
        :param latitude: The latitude of this Crime.  # noqa: E501
        :type latitude: str
        :param longitude: The longitude of this Crime.  # noqa: E501
        :type longitude: str
        :param gps_location: The gps_location of this Crime.  # noqa: E501
        :type gps_location: str
        """
        self.swagger_types = {
            'crime_id': str,
            'case_number': str,
            'date': str,
            'block': str,
            'crime_code': str,
            'primary_description': str,
            'secondary_description': str,
            'location_cat': str,
            'arrested': bool,
            'domestic': bool,
            'beat_code': str,
            'district_code': str,
            'ward_code': str,
            'community_area_code': str,
            'fbi_code': str,
            'x_coordinate': str,
            'y_coordinate': str,
            'year': str,
            'updated_on': str,
            'latitude': str,
            'longitude': str,
            'gps_location': str
        }

        self.attribute_map = {
            'crime_id': 'crime_id',
            'case_number': 'case_number',
            'date': 'date',
            'block': 'block',
            'crime_code': 'crime_code',
            'primary_description': 'primary_description',
            'secondary_description': 'secondary_description',
            'location_cat': 'location_cat',
            'arrested': 'arrested',
            'domestic': 'domestic',
            'beat_code': 'beat_code',
            'district_code': 'district_code',
            'ward_code': 'ward_code',
            'community_area_code': 'community_area_code',
            'fbi_code': 'fbi_code',
            'x_coordinate': 'x_coordinate',
            'y_coordinate': 'y_coordinate',
            'year': 'year',
            'updated_on': 'updated_on',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'gps_location': 'gps_location'
        }

        self._crime_id = crime_id
        self._case_number = case_number
        self._date = date
        self._block = block
        self._crime_code = crime_code
        self._primary_description = primary_description
        self._secondary_description = secondary_description
        self._location_cat = location_cat
        self._arrested = arrested
        self._domestic = domestic
        self._beat_code = beat_code
        self._district_code = district_code
        self._ward_code = ward_code
        self._community_area_code = community_area_code
        self._fbi_code = fbi_code
        self._x_coordinate = x_coordinate
        self._y_coordinate = y_coordinate
        self._year = year
        self._updated_on = updated_on
        self._latitude = latitude
        self._longitude = longitude
        self._gps_location = gps_location

    @classmethod
    def from_dict(cls, dikt) -> 'Crime':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Crime of this Crime.  # noqa: E501
        :rtype: Crime
        """
        return util.deserialize_model(dikt, cls)

    @property
    def crime_id(self) -> str:
        """Gets the crime_id of this Crime.

        Unique identifier representing a specific crime according to chicago police.  # noqa: E501

        :return: The crime_id of this Crime.
        :rtype: str
        """
        return self._crime_id

    @crime_id.setter
    def crime_id(self, crime_id: str):
        """Sets the crime_id of this Crime.

        Unique identifier representing a specific crime according to chicago police.  # noqa: E501

        :param crime_id: The crime_id of this Crime.
        :type crime_id: str
        """
        if crime_id is None:
            raise ValueError("Invalid value for `crime_id`, must not be `None`")  # noqa: E501

        self._crime_id = crime_id

    @property
    def case_number(self) -> str:
        """Gets the case_number of this Crime.

        Case Number.  # noqa: E501

        :return: The case_number of this Crime.
        :rtype: str
        """
        return self._case_number

    @case_number.setter
    def case_number(self, case_number: str):
        """Sets the case_number of this Crime.

        Case Number.  # noqa: E501

        :param case_number: The case_number of this Crime.
        :type case_number: str
        """

        self._case_number = case_number

    @property
    def date(self) -> str:
        """Gets the date of this Crime.

        Date of the crime.  # noqa: E501

        :return: The date of this Crime.
        :rtype: str
        """
        return self._date

    @date.setter
    def date(self, date: str):
        """Sets the date of this Crime.

        Date of the crime.  # noqa: E501

        :param date: The date of this Crime.
        :type date: str
        """

        self._date = date

    @property
    def block(self) -> str:
        """Gets the block of this Crime.

        Block Address.  # noqa: E501

        :return: The block of this Crime.
        :rtype: str
        """
        return self._block

    @block.setter
    def block(self, block: str):
        """Sets the block of this Crime.

        Block Address.  # noqa: E501

        :param block: The block of this Crime.
        :type block: str
        """

        self._block = block

    @property
    def crime_code(self) -> str:
        """Gets the crime_code of this Crime.

        IUCR by chicago police.  # noqa: E501

        :return: The crime_code of this Crime.
        :rtype: str
        """
        return self._crime_code

    @crime_code.setter
    def crime_code(self, crime_code: str):
        """Sets the crime_code of this Crime.

        IUCR by chicago police.  # noqa: E501

        :param crime_code: The crime_code of this Crime.
        :type crime_code: str
        """

        self._crime_code = crime_code

    @property
    def primary_description(self) -> str:
        """Gets the primary_description of this Crime.

        Primary Type.  # noqa: E501

        :return: The primary_description of this Crime.
        :rtype: str
        """
        return self._primary_description

    @primary_description.setter
    def primary_description(self, primary_description: str):
        """Sets the primary_description of this Crime.

        Primary Type.  # noqa: E501

        :param primary_description: The primary_description of this Crime.
        :type primary_description: str
        """

        self._primary_description = primary_description

    @property
    def secondary_description(self) -> str:
        """Gets the secondary_description of this Crime.

        Description.  # noqa: E501

        :return: The secondary_description of this Crime.
        :rtype: str
        """
        return self._secondary_description

    @secondary_description.setter
    def secondary_description(self, secondary_description: str):
        """Sets the secondary_description of this Crime.

        Description.  # noqa: E501

        :param secondary_description: The secondary_description of this Crime.
        :type secondary_description: str
        """

        self._secondary_description = secondary_description

    @property
    def location_cat(self) -> str:
        """Gets the location_cat of this Crime.

        Location Description/catogery.  # noqa: E501

        :return: The location_cat of this Crime.
        :rtype: str
        """
        return self._location_cat

    @location_cat.setter
    def location_cat(self, location_cat: str):
        """Sets the location_cat of this Crime.

        Location Description/catogery.  # noqa: E501

        :param location_cat: The location_cat of this Crime.
        :type location_cat: str
        """

        self._location_cat = location_cat

    @property
    def arrested(self) -> bool:
        """Gets the arrested of this Crime.

        Arrested.  # noqa: E501

        :return: The arrested of this Crime.
        :rtype: bool
        """
        return self._arrested

    @arrested.setter
    def arrested(self, arrested: bool):
        """Sets the arrested of this Crime.

        Arrested.  # noqa: E501

        :param arrested: The arrested of this Crime.
        :type arrested: bool
        """

        self._arrested = arrested

    @property
    def domestic(self) -> bool:
        """Gets the domestic of this Crime.

        Domestic.  # noqa: E501

        :return: The domestic of this Crime.
        :rtype: bool
        """
        return self._domestic

    @domestic.setter
    def domestic(self, domestic: bool):
        """Sets the domestic of this Crime.

        Domestic.  # noqa: E501

        :param domestic: The domestic of this Crime.
        :type domestic: bool
        """

        self._domestic = domestic

    @property
    def beat_code(self) -> str:
        """Gets the beat_code of this Crime.

        Beat Code.  # noqa: E501

        :return: The beat_code of this Crime.
        :rtype: str
        """
        return self._beat_code

    @beat_code.setter
    def beat_code(self, beat_code: str):
        """Sets the beat_code of this Crime.

        Beat Code.  # noqa: E501

        :param beat_code: The beat_code of this Crime.
        :type beat_code: str
        """

        self._beat_code = beat_code

    @property
    def district_code(self) -> str:
        """Gets the district_code of this Crime.

        District Code.  # noqa: E501

        :return: The district_code of this Crime.
        :rtype: str
        """
        return self._district_code

    @district_code.setter
    def district_code(self, district_code: str):
        """Sets the district_code of this Crime.

        District Code.  # noqa: E501

        :param district_code: The district_code of this Crime.
        :type district_code: str
        """

        self._district_code = district_code

    @property
    def ward_code(self) -> str:
        """Gets the ward_code of this Crime.

        Ward Code.  # noqa: E501

        :return: The ward_code of this Crime.
        :rtype: str
        """
        return self._ward_code

    @ward_code.setter
    def ward_code(self, ward_code: str):
        """Sets the ward_code of this Crime.

        Ward Code.  # noqa: E501

        :param ward_code: The ward_code of this Crime.
        :type ward_code: str
        """

        self._ward_code = ward_code

    @property
    def community_area_code(self) -> str:
        """Gets the community_area_code of this Crime.

        Community Area code.  # noqa: E501

        :return: The community_area_code of this Crime.
        :rtype: str
        """
        return self._community_area_code

    @community_area_code.setter
    def community_area_code(self, community_area_code: str):
        """Sets the community_area_code of this Crime.

        Community Area code.  # noqa: E501

        :param community_area_code: The community_area_code of this Crime.
        :type community_area_code: str
        """

        self._community_area_code = community_area_code

    @property
    def fbi_code(self) -> str:
        """Gets the fbi_code of this Crime.

        FBI Code.  # noqa: E501

        :return: The fbi_code of this Crime.
        :rtype: str
        """
        return self._fbi_code

    @fbi_code.setter
    def fbi_code(self, fbi_code: str):
        """Sets the fbi_code of this Crime.

        FBI Code.  # noqa: E501

        :param fbi_code: The fbi_code of this Crime.
        :type fbi_code: str
        """

        self._fbi_code = fbi_code

    @property
    def x_coordinate(self) -> str:
        """Gets the x_coordinate of this Crime.

        X Coordinate.  # noqa: E501

        :return: The x_coordinate of this Crime.
        :rtype: str
        """
        return self._x_coordinate

    @x_coordinate.setter
    def x_coordinate(self, x_coordinate: str):
        """Sets the x_coordinate of this Crime.

        X Coordinate.  # noqa: E501

        :param x_coordinate: The x_coordinate of this Crime.
        :type x_coordinate: str
        """

        self._x_coordinate = x_coordinate

    @property
    def y_coordinate(self) -> str:
        """Gets the y_coordinate of this Crime.

        Y Coordinate.  # noqa: E501

        :return: The y_coordinate of this Crime.
        :rtype: str
        """
        return self._y_coordinate

    @y_coordinate.setter
    def y_coordinate(self, y_coordinate: str):
        """Sets the y_coordinate of this Crime.

        Y Coordinate.  # noqa: E501

        :param y_coordinate: The y_coordinate of this Crime.
        :type y_coordinate: str
        """

        self._y_coordinate = y_coordinate

    @property
    def year(self) -> str:
        """Gets the year of this Crime.

        Year of the crime.  # noqa: E501

        :return: The year of this Crime.
        :rtype: str
        """
        return self._year

    @year.setter
    def year(self, year: str):
        """Sets the year of this Crime.

        Year of the crime.  # noqa: E501

        :param year: The year of this Crime.
        :type year: str
        """

        self._year = year

    @property
    def updated_on(self) -> str:
        """Gets the updated_on of this Crime.

        Last Updated On.  # noqa: E501

        :return: The updated_on of this Crime.
        :rtype: str
        """
        return self._updated_on

    @updated_on.setter
    def updated_on(self, updated_on: str):
        """Sets the updated_on of this Crime.

        Last Updated On.  # noqa: E501

        :param updated_on: The updated_on of this Crime.
        :type updated_on: str
        """

        self._updated_on = updated_on

    @property
    def latitude(self) -> str:
        """Gets the latitude of this Crime.

        Latitude.  # noqa: E501

        :return: The latitude of this Crime.
        :rtype: str
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude: str):
        """Sets the latitude of this Crime.

        Latitude.  # noqa: E501

        :param latitude: The latitude of this Crime.
        :type latitude: str
        """

        self._latitude = latitude

    @property
    def longitude(self) -> str:
        """Gets the longitude of this Crime.

        Longitude.  # noqa: E501

        :return: The longitude of this Crime.
        :rtype: str
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude: str):
        """Sets the longitude of this Crime.

        Longitude.  # noqa: E501

        :param longitude: The longitude of this Crime.
        :type longitude: str
        """

        self._longitude = longitude

    @property
    def gps_location(self) -> str:
        """Gets the gps_location of this Crime.

        GPS Location.  # noqa: E501

        :return: The gps_location of this Crime.
        :rtype: str
        """
        return self._gps_location

    @gps_location.setter
    def gps_location(self, gps_location: str):
        """Sets the gps_location of this Crime.

        GPS Location.  # noqa: E501

        :param gps_location: The gps_location of this Crime.
        :type gps_location: str
        """

        self._gps_location = gps_location
